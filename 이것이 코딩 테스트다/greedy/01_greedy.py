# 그리디 대표 문제 : 거스름돈

# 거스름돈 : 1260원
n = 1260
count = 0

# 큰 단위의 화폐부터 차례대로 확인
coin_types = [500,100,50,10]

for coin in coin_types:
    count += n // coin
    # 1. 0 + 1260//500 = 2  , count=2
    # 2. 2 + 260//100 = 4  , count=4
    # 3. 4 + 60//50 =5 ,count =5
    # 4. 5 + 10//10 = 6 , count =6
    n %= coin
    # 1. 1260 % 500 = 260 , n=260
    # 2. 260 % 100 = 60 , n=60
    # 3. 60 % 50 = 10 , n=10
    # 4. 10 % 10 = 0 , n =0

print(count) #6

# 화폐의 종류만큼 반복 수행
# 화페의 종류 = K개일 때, 시간 복잡도 O(K)
# 이 알고리즘의 시간 복잡도는 동전의 총 종류에만 영향을 받고 , 거슬러줘야하는 금액의 크기와는 무관

# 그 해법이 정당한지 검토해야함
# DP) 800원 -> 500원,100원,100원,100원 4개 (그리디 알고리즘) / 400원,400원 2개 (최적의 해)

# 동전의 단위가 서로 배수 형태가 아니라 무작위로 주어진 경우 그리디 알고리즘으로는 해결할 수 없음
